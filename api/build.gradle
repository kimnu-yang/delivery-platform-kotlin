import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.spring'
    id 'org.jetbrains.kotlin.plugin.jpa'
}

group = 'org.delivery'
version = '1.0-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 스프링 부트 엑츄에이터
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // 프로메테우스
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.1'

    // TICK stack으로 데이터를 보내기 위한 포맷 statsD
    implementation 'io.micrometer:micrometer-registry-statsd:1.11.0'



    // lombok 어노테이션 기반 코드 자동생성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // amqp 메세징 큐 프로토콜
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // spring 프레임워크
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // DB 모듈에 연결하여 상속 받음
    implementation project(':db')
    implementation project(':common')

    // jpa ORM
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // swagger API view
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.3.0'

    // jwt 토큰 인증
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // kotlin
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.3'

}

test {
    useJUnitPlatform()
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

bootJar {
    enabled = true
}

jar {
    enabled = false
}